<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Soccer Slam 2025 - Live Registration Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #BCBDC0 0%, #DB3328 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .logo {
            max-width: 150px;
            height: auto;
            margin-bottom: 20px;
        }

        h1 {
            color: #333;
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #DB3328, #BCBDC0);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .last-updated {
            color: #666;
            font-size: 0.9em;
            margin-top: 10px;
        }

        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .summary-card {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            text-align: center;
        }

        .summary-card h3 {
            color: #666;
            font-size: 0.9em;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 10px;
        }

        .summary-card .number {
            font-size: 2.5em;
            font-weight: bold;
            color: #DB3328;
        }

        .summary-card .detail {
            font-size: 0.85em;
            color: #666;
            margin-top: 5px;
        }

        .section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .section h2 {
            color: #333;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 3px solid #DB3328;
        }

        .congregations-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }

        .congregation-card {
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s ease;
        }

        .congregation-card:hover {
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }

        .congregation-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .congregation-name {
            font-size: 1.2em;
            font-weight: bold;
            color: #333;
        }

        .status-badge {
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.85em;
            font-weight: 600;
        }

        .status-complete {
            background: #C8E6C9;
            color: #2E7D32;
        }

        .status-need-female {
            background: #FFCDD2;
            color: #C62828;
        }

        .status-progress {
            background: #FFF9C4;
            color: #F57F17;
        }

        .status-empty {
            background: #F5F5F5;
            color: #666;
        }

        .player-list {
            margin-top: 10px;
        }

        .player-count {
            font-size: 0.9em;
            color: #666;
            margin-bottom: 10px;
        }

        .player-item {
            padding: 8px;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .player-item:last-child {
            border-bottom: none;
        }

        .player-name {
            font-weight: 500;
            color: #333;
        }

        .player-gender {
            font-size: 0.85em;
            padding: 2px 8px;
            border-radius: 12px;
            background: #f0f0f0;
        }

        .gender-male {
            background: #E3F2FD;
            color: #1976D2;
        }

        .gender-female {
            background: #FCE4EC;
            color: #C2185B;
        }

        .kids-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .age-group-card {
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
        }

        .age-group-title {
            font-size: 1.1em;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
        }

        .age-group-count {
            font-size: 2em;
            font-weight: bold;
            color: #DB3328;
            margin-bottom: 10px;
        }

        .kids-list {
            max-height: 200px;
            overflow-y: auto;
            text-align: left;
            margin-top: 15px;
        }

        .kid-item {
            padding: 5px;
            border-bottom: 1px solid #f0f0f0;
            font-size: 0.9em;
        }

        .loading {
            text-align: center;
            padding: 50px;
            color: white;
            font-size: 1.2em;
        }

        .error {
            background: #FFCDD2;
            color: #C62828;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            margin: 20px 0;
        }

        .refresh-info {
            text-align: center;
            color: #666;
            font-size: 0.9em;
            margin-top: 20px;
        }

        @media (max-width: 768px) {
            .congregations-grid {
                grid-template-columns: 1fr;
            }
            
            h1 {
                font-size: 2em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <img src="https://drive.google.com/uc?export=view&id=18IzfnpSiabGcOHD5I55A4f9NQ04EhTbW" alt="Soccer Slam Logo" class="logo">
            <h1>Soccer Slam 2025</h1>
            <p>Live Registration Dashboard</p>
            <p class="last-updated" id="lastUpdated">Loading...</p>
        </div>

        <div id="loading" class="loading">
            Loading registration data...
        </div>

        <div id="error" class="error" style="display: none;"></div>

        <div id="content" style="display: none;">
            <div class="summary-cards" id="summaryCards">
                <!-- Summary cards will be inserted here -->
            </div>

            <div class="section">
                <h2>Adults Tournament - Teams by Congregation</h2>
                <div class="congregations-grid" id="congregationsGrid">
                    <!-- Congregation cards will be inserted here -->
                </div>
            </div>

            <div class="section">
                <h2>Kids Tournament - Players by Age Group</h2>
                <div class="kids-grid" id="kidsGrid">
                    <!-- Age group cards will be inserted here -->
                </div>
            </div>

            <div class="refresh-info">
                Data refreshes automatically every 30 seconds
            </div>
        </div>
    </div>

    <script>
        // Replace this with your Google Apps Script URL
        const SCRIPT_URL = https://script.google.com/macros/s/AKfycbxer8DKvrugJs3okwLZ_D-CO6Hka2u5G0tpWYY0cK6ueVfGDku-I_x4AOzJo7ZzGyA8kw/exec;
        
        let refreshInterval;

        async function fetchData() {
            try {
                const response = await fetch(SCRIPT_URL);
                if (!response.ok) throw new Error('Failed to fetch data');
                
                const data = await response.json();
                displayData(data);
                
                document.getElementById('loading').style.display = 'none';
                document.getElementById('error').style.display = 'none';
                document.getElementById('content').style.display = 'block';
                
                // Update last updated time
                const lastUpdated = new Date(data.lastUpdated);
                document.getElementById('lastUpdated').textContent = 
                    `Last updated: ${lastUpdated.toLocaleString()}`;
                    
            } catch (error) {
                console.error('Error fetching data:', error);
                document.getElementById('loading').style.display = 'none';
                document.getElementById('error').style.display = 'block';
                document.getElementById('error').textContent = 
                    'Error loading data. Please check your connection and try again.';
            }
        }

        function displayData(data) {
            // Display summary cards
            displaySummaryCards(data.summary);
            
            // Display adult teams
            displayAdultTeams(data.adults);
            
            // Display kids
            displayKids(data.kids);
        }

        function displaySummaryCards(summary) {
            const container = document.getElementById('summaryCards');
            container.innerHTML = `
                <div class="summary-card">
                    <h3>Total Adults</h3>
                    <div class="number">${summary.adults.total}</div>
                    <div class="detail">${summary.adults.male} Male, ${summary.adults.female} Female</div>
                </div>
                <div class="summary-card">
                    <h3>Complete Teams</h3>
                    <div class="number">${summary.adults.completeTeams}/8</div>
                    <div class="detail">${summary.adults.teamsNeedingFemales} teams need female players</div>
                </div>
                <div class="summary-card">
                    <h3>Total Kids</h3>
                    <div class="number">${summary.kids.total}</div>
                    <div class="detail">${summary.kids.male} Male, ${summary.kids.female} Female</div>
                </div>
                <div class="summary-card">
                    <h3>Total Registered</h3>
                    <div class="number">${summary.adults.total + summary.kids.total}</div>
                    <div class="detail">Players across all categories</div>
                </div>
            `;
        }

        function displayAdultTeams(adultsData) {
            const container = document.getElementById('congregationsGrid');
            container.innerHTML = '';
            
            const congregations = ['Concord', 'Eastwood', 'Homebush Bay', 'Kellyville', 
                                  'Kogarah', 'Rhodes', 'Strathfield', 'Willoughby'];
            
            congregations.forEach(congregation => {
                const team = adultsData[congregation];
                const statusClass = getStatusClass(team.statusColor);
                
                const card = document.createElement('div');
                card.className = 'congregation-card';
                card.innerHTML = `
                    <div class="congregation-header">
                        <div class="congregation-name">${congregation}</div>
                        <div class="status-badge ${statusClass}">${team.status}</div>
                    </div>
                    <div class="player-count">
                        ${team.totalCount} players (${team.maleCount}M, ${team.femaleCount}F)
                    </div>
                    <div class="player-list">
                        ${team.players.map(player => `
                            <div class="player-item">
                                <span class="player-name">${player.name}</span>
                                <span class="player-gender gender-${player.gender.toLowerCase()}">${player.gender}</span>
                            </div>
                        `).join('')}
                    </div>
                `;
                
                container.appendChild(card);
            });
        }

        function displayKids(kidsData) {
            const container = document.getElementById('kidsGrid');
            container.innerHTML = '';
            
            // Group kids by age group
            const ageGroups = {};
            kidsData.forEach(kid => {
                if (!ageGroups[kid.ageGroup]) {
                    ageGroups[kid.ageGroup] = [];
                }
                ageGroups[kid.ageGroup].push(kid);
            });
            
            // Display each age group
            const ageOrder = ['4-6', '7-10', '11-14', '15-17'];
            ageOrder.forEach(ageGroup => {
                if (ageGroups[ageGroup]) {
                    const kids = ageGroups[ageGroup];
                    const card = document.createElement('div');
                    card.className = 'age-group-card';
                    card.innerHTML = `
                        <div class="age-group-title">Ages ${ageGroup}</div>
                        <div class="age-group-count">${kids.length}</div>
                        <div class="player-count">
                            ${kids.filter(k => k.gender.toLowerCase() === 'male').length}M, 
                            ${kids.filter(k => k.gender.toLowerCase() === 'female').length}F
                        </div>
                        <div class="kids-list">
                            ${kids.map(kid => `
                                <div class="kid-item">
                                    ${kid.name} (${kid.age}, ${kid.gender[0]})
                                </div>
                            `).join('')}
                        </div>
                    `;
                    container.appendChild(card);
                }
            });
        }

        function getStatusClass(statusColor) {
            switch(statusColor) {
                case 'green': return 'status-complete';
                case 'red': return 'status-need-female';
                case 'yellow': return 'status-progress';
                default: return 'status-empty';
            }
        }

        // Initial load
        fetchData();

        // Refresh every 30 seconds
        refreshInterval = setInterval(fetchData, 30000);

        // Clean up on page unload
        window.addEventListener('beforeunload', () => {
            if (refreshInterval) clearInterval(refreshInterval);
        });
    </script>
</body>
</html>
